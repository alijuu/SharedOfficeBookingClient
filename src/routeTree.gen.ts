/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthHomeImport } from './routes/_auth/home'
import { Route as AuthCreateImport } from './routes/_auth/create'
import { Route as AuthWorkspaceIdImport } from './routes/_auth/workspace/$id'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthHomeRoute = AuthHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCreateRoute = AuthCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthWorkspaceIdRoute = AuthWorkspaceIdImport.update({
  id: '/workspace/$id',
  path: '/workspace/$id',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_auth/create': {
      id: '/_auth/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof AuthCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/home': {
      id: '/_auth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeImport
      parentRoute: typeof AuthImport
    }
    '/_auth/workspace/$id': {
      id: '/_auth/workspace/$id'
      path: '/workspace/$id'
      fullPath: '/workspace/$id'
      preLoaderRoute: typeof AuthWorkspaceIdImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthCreateRoute: typeof AuthCreateRoute
  AuthHomeRoute: typeof AuthHomeRoute
  AuthWorkspaceIdRoute: typeof AuthWorkspaceIdRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthCreateRoute: AuthCreateRoute,
  AuthHomeRoute: AuthHomeRoute,
  AuthWorkspaceIdRoute: AuthWorkspaceIdRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/create': typeof AuthCreateRoute
  '/home': typeof AuthHomeRoute
  '/workspace/$id': typeof AuthWorkspaceIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/create': typeof AuthCreateRoute
  '/home': typeof AuthHomeRoute
  '/workspace/$id': typeof AuthWorkspaceIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/_auth/create': typeof AuthCreateRoute
  '/_auth/home': typeof AuthHomeRoute
  '/_auth/workspace/$id': typeof AuthWorkspaceIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/test'
    | '/create'
    | '/home'
    | '/workspace/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/test'
    | '/create'
    | '/home'
    | '/workspace/$id'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/register'
    | '/test'
    | '/_auth/create'
    | '/_auth/home'
    | '/_auth/workspace/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  TestRoute: typeof TestRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  TestRoute: TestRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login",
        "/register",
        "/test"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/create",
        "/_auth/home",
        "/_auth/workspace/$id"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_auth/create": {
      "filePath": "_auth/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/home": {
      "filePath": "_auth/home.tsx",
      "parent": "/_auth"
    },
    "/_auth/workspace/$id": {
      "filePath": "_auth/workspace/$id.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
