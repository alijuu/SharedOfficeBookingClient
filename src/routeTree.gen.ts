/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as BookingsImport } from './routes/bookings'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthHomeImport } from './routes/_auth/home'
import { Route as AuthCreateImport } from './routes/_auth/create'
import { Route as AuthUserIndexImport } from './routes/_auth/user/index'
import { Route as AuthUserSettingsImport } from './routes/_auth/user/settings'
import { Route as AuthWorkspaceIdIndexImport } from './routes/_auth/workspace/$id/index'
import { Route as AuthWorkspaceIdBookImport } from './routes/_auth/workspace/$id/book'
import { Route as AuthAdminWorkspaceCreateImport } from './routes/_auth/admin/workspace/create'
import { Route as AuthAdminWorkspaceIdIndexImport } from './routes/_auth/admin/workspace/$id/index'
import { Route as AuthAdminWorkspaceIdEditImport } from './routes/_auth/admin/workspace/$id/edit'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const BookingsRoute = BookingsImport.update({
  id: '/bookings',
  path: '/bookings',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthHomeRoute = AuthHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCreateRoute = AuthCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUserIndexRoute = AuthUserIndexImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUserSettingsRoute = AuthUserSettingsImport.update({
  id: '/user/settings',
  path: '/user/settings',
  getParentRoute: () => AuthRoute,
} as any)

const AuthWorkspaceIdIndexRoute = AuthWorkspaceIdIndexImport.update({
  id: '/workspace/$id/',
  path: '/workspace/$id/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthWorkspaceIdBookRoute = AuthWorkspaceIdBookImport.update({
  id: '/workspace/$id/book',
  path: '/workspace/$id/book',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAdminWorkspaceCreateRoute = AuthAdminWorkspaceCreateImport.update({
  id: '/admin/workspace/create',
  path: '/admin/workspace/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAdminWorkspaceIdIndexRoute = AuthAdminWorkspaceIdIndexImport.update({
  id: '/admin/workspace/$id/',
  path: '/admin/workspace/$id/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAdminWorkspaceIdEditRoute = AuthAdminWorkspaceIdEditImport.update({
  id: '/admin/workspace/$id/edit',
  path: '/admin/workspace/$id/edit',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/bookings': {
      id: '/bookings'
      path: '/bookings'
      fullPath: '/bookings'
      preLoaderRoute: typeof BookingsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_auth/create': {
      id: '/_auth/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof AuthCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/home': {
      id: '/_auth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeImport
      parentRoute: typeof AuthImport
    }
    '/_auth/user/settings': {
      id: '/_auth/user/settings'
      path: '/user/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof AuthUserSettingsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/user/': {
      id: '/_auth/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AuthUserIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/admin/workspace/create': {
      id: '/_auth/admin/workspace/create'
      path: '/admin/workspace/create'
      fullPath: '/admin/workspace/create'
      preLoaderRoute: typeof AuthAdminWorkspaceCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/workspace/$id/book': {
      id: '/_auth/workspace/$id/book'
      path: '/workspace/$id/book'
      fullPath: '/workspace/$id/book'
      preLoaderRoute: typeof AuthWorkspaceIdBookImport
      parentRoute: typeof AuthImport
    }
    '/_auth/workspace/$id/': {
      id: '/_auth/workspace/$id/'
      path: '/workspace/$id'
      fullPath: '/workspace/$id'
      preLoaderRoute: typeof AuthWorkspaceIdIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/admin/workspace/$id/edit': {
      id: '/_auth/admin/workspace/$id/edit'
      path: '/admin/workspace/$id/edit'
      fullPath: '/admin/workspace/$id/edit'
      preLoaderRoute: typeof AuthAdminWorkspaceIdEditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/admin/workspace/$id/': {
      id: '/_auth/admin/workspace/$id/'
      path: '/admin/workspace/$id'
      fullPath: '/admin/workspace/$id'
      preLoaderRoute: typeof AuthAdminWorkspaceIdIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthCreateRoute: typeof AuthCreateRoute
  AuthHomeRoute: typeof AuthHomeRoute
  AuthUserSettingsRoute: typeof AuthUserSettingsRoute
  AuthUserIndexRoute: typeof AuthUserIndexRoute
  AuthAdminWorkspaceCreateRoute: typeof AuthAdminWorkspaceCreateRoute
  AuthWorkspaceIdBookRoute: typeof AuthWorkspaceIdBookRoute
  AuthWorkspaceIdIndexRoute: typeof AuthWorkspaceIdIndexRoute
  AuthAdminWorkspaceIdEditRoute: typeof AuthAdminWorkspaceIdEditRoute
  AuthAdminWorkspaceIdIndexRoute: typeof AuthAdminWorkspaceIdIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthCreateRoute: AuthCreateRoute,
  AuthHomeRoute: AuthHomeRoute,
  AuthUserSettingsRoute: AuthUserSettingsRoute,
  AuthUserIndexRoute: AuthUserIndexRoute,
  AuthAdminWorkspaceCreateRoute: AuthAdminWorkspaceCreateRoute,
  AuthWorkspaceIdBookRoute: AuthWorkspaceIdBookRoute,
  AuthWorkspaceIdIndexRoute: AuthWorkspaceIdIndexRoute,
  AuthAdminWorkspaceIdEditRoute: AuthAdminWorkspaceIdEditRoute,
  AuthAdminWorkspaceIdIndexRoute: AuthAdminWorkspaceIdIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/bookings': typeof BookingsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/create': typeof AuthCreateRoute
  '/home': typeof AuthHomeRoute
  '/user/settings': typeof AuthUserSettingsRoute
  '/user': typeof AuthUserIndexRoute
  '/admin/workspace/create': typeof AuthAdminWorkspaceCreateRoute
  '/workspace/$id/book': typeof AuthWorkspaceIdBookRoute
  '/workspace/$id': typeof AuthWorkspaceIdIndexRoute
  '/admin/workspace/$id/edit': typeof AuthAdminWorkspaceIdEditRoute
  '/admin/workspace/$id': typeof AuthAdminWorkspaceIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/bookings': typeof BookingsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/create': typeof AuthCreateRoute
  '/home': typeof AuthHomeRoute
  '/user/settings': typeof AuthUserSettingsRoute
  '/user': typeof AuthUserIndexRoute
  '/admin/workspace/create': typeof AuthAdminWorkspaceCreateRoute
  '/workspace/$id/book': typeof AuthWorkspaceIdBookRoute
  '/workspace/$id': typeof AuthWorkspaceIdIndexRoute
  '/admin/workspace/$id/edit': typeof AuthAdminWorkspaceIdEditRoute
  '/admin/workspace/$id': typeof AuthAdminWorkspaceIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/bookings': typeof BookingsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/_auth/create': typeof AuthCreateRoute
  '/_auth/home': typeof AuthHomeRoute
  '/_auth/user/settings': typeof AuthUserSettingsRoute
  '/_auth/user/': typeof AuthUserIndexRoute
  '/_auth/admin/workspace/create': typeof AuthAdminWorkspaceCreateRoute
  '/_auth/workspace/$id/book': typeof AuthWorkspaceIdBookRoute
  '/_auth/workspace/$id/': typeof AuthWorkspaceIdIndexRoute
  '/_auth/admin/workspace/$id/edit': typeof AuthAdminWorkspaceIdEditRoute
  '/_auth/admin/workspace/$id/': typeof AuthAdminWorkspaceIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/bookings'
    | '/login'
    | '/register'
    | '/test'
    | '/create'
    | '/home'
    | '/user/settings'
    | '/user'
    | '/admin/workspace/create'
    | '/workspace/$id/book'
    | '/workspace/$id'
    | '/admin/workspace/$id/edit'
    | '/admin/workspace/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/bookings'
    | '/login'
    | '/register'
    | '/test'
    | '/create'
    | '/home'
    | '/user/settings'
    | '/user'
    | '/admin/workspace/create'
    | '/workspace/$id/book'
    | '/workspace/$id'
    | '/admin/workspace/$id/edit'
    | '/admin/workspace/$id'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/bookings'
    | '/login'
    | '/register'
    | '/test'
    | '/_auth/create'
    | '/_auth/home'
    | '/_auth/user/settings'
    | '/_auth/user/'
    | '/_auth/admin/workspace/create'
    | '/_auth/workspace/$id/book'
    | '/_auth/workspace/$id/'
    | '/_auth/admin/workspace/$id/edit'
    | '/_auth/admin/workspace/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  BookingsRoute: typeof BookingsRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  TestRoute: typeof TestRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  BookingsRoute: BookingsRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  TestRoute: TestRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/bookings",
        "/login",
        "/register",
        "/test"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/create",
        "/_auth/home",
        "/_auth/user/settings",
        "/_auth/user/",
        "/_auth/admin/workspace/create",
        "/_auth/workspace/$id/book",
        "/_auth/workspace/$id/",
        "/_auth/admin/workspace/$id/edit",
        "/_auth/admin/workspace/$id/"
      ]
    },
    "/bookings": {
      "filePath": "bookings.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_auth/create": {
      "filePath": "_auth/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/home": {
      "filePath": "_auth/home.tsx",
      "parent": "/_auth"
    },
    "/_auth/user/settings": {
      "filePath": "_auth/user/settings.tsx",
      "parent": "/_auth"
    },
    "/_auth/user/": {
      "filePath": "_auth/user/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/admin/workspace/create": {
      "filePath": "_auth/admin/workspace/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/workspace/$id/book": {
      "filePath": "_auth/workspace/$id/book.tsx",
      "parent": "/_auth"
    },
    "/_auth/workspace/$id/": {
      "filePath": "_auth/workspace/$id/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/admin/workspace/$id/edit": {
      "filePath": "_auth/admin/workspace/$id/edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/admin/workspace/$id/": {
      "filePath": "_auth/admin/workspace/$id/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
