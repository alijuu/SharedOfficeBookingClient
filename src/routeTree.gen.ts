/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as BookingsImport } from './routes/bookings'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as AuthImport } from './routes/_auth'
import { Route as LandingPageImport } from './routes/LandingPage'
import { Route as IndexImport } from './routes/index'
import { Route as AuthHomeImport } from './routes/_auth/home'
import { Route as AuthFaqImport } from './routes/_auth/faq'
import { Route as AuthCreateImport } from './routes/_auth/create'
import { Route as DashboardAdminIndexImport } from './routes/_dashboard/admin/index'
import { Route as AuthUserIndexImport } from './routes/_auth/user/index'
import { Route as DashboardAdminHomeImport } from './routes/_dashboard/admin/home'
import { Route as AuthUserSettingsImport } from './routes/_auth/user/settings'
import { Route as DashboardAdminWorkspaceIndexImport } from './routes/_dashboard/admin/workspace/index'
import { Route as DashboardAdminUsersIndexImport } from './routes/_dashboard/admin/users/index'
import { Route as DashboardAdminDeskIndexImport } from './routes/_dashboard/admin/desk/index'
import { Route as AuthWorkspaceIdIndexImport } from './routes/_auth/workspace/$id/index'
import { Route as DashboardAdminWorkspaceCreateImport } from './routes/_dashboard/admin/workspace/create'
import { Route as AuthWorkspaceIdBookImport } from './routes/_auth/workspace/$id/book'
import { Route as DashboardAdminWorkspaceIdIndexImport } from './routes/_dashboard/admin/workspace/$id/index'
import { Route as DashboardAdminWorkspaceIdEditImport } from './routes/_dashboard/admin/workspace/$id/edit'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const BookingsRoute = BookingsImport.update({
  id: '/bookings',
  path: '/bookings',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const LandingPageRoute = LandingPageImport.update({
  id: '/LandingPage',
  path: '/LandingPage',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthHomeRoute = AuthHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)

const AuthFaqRoute = AuthFaqImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCreateRoute = AuthCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardAdminIndexRoute = DashboardAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthUserIndexRoute = AuthUserIndexImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardAdminHomeRoute = DashboardAdminHomeImport.update({
  id: '/admin/home',
  path: '/admin/home',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthUserSettingsRoute = AuthUserSettingsImport.update({
  id: '/user/settings',
  path: '/user/settings',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardAdminWorkspaceIndexRoute =
  DashboardAdminWorkspaceIndexImport.update({
    id: '/admin/workspace/',
    path: '/admin/workspace/',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardAdminUsersIndexRoute = DashboardAdminUsersIndexImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAdminDeskIndexRoute = DashboardAdminDeskIndexImport.update({
  id: '/admin/desk/',
  path: '/admin/desk/',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthWorkspaceIdIndexRoute = AuthWorkspaceIdIndexImport.update({
  id: '/workspace/$id/',
  path: '/workspace/$id/',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardAdminWorkspaceCreateRoute =
  DashboardAdminWorkspaceCreateImport.update({
    id: '/admin/workspace/create',
    path: '/admin/workspace/create',
    getParentRoute: () => DashboardRoute,
  } as any)

const AuthWorkspaceIdBookRoute = AuthWorkspaceIdBookImport.update({
  id: '/workspace/$id/book',
  path: '/workspace/$id/book',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardAdminWorkspaceIdIndexRoute =
  DashboardAdminWorkspaceIdIndexImport.update({
    id: '/admin/workspace/$id/',
    path: '/admin/workspace/$id/',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardAdminWorkspaceIdEditRoute =
  DashboardAdminWorkspaceIdEditImport.update({
    id: '/admin/workspace/$id/edit',
    path: '/admin/workspace/$id/edit',
    getParentRoute: () => DashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/LandingPage': {
      id: '/LandingPage'
      path: '/LandingPage'
      fullPath: '/LandingPage'
      preLoaderRoute: typeof LandingPageImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/bookings': {
      id: '/bookings'
      path: '/bookings'
      fullPath: '/bookings'
      preLoaderRoute: typeof BookingsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_auth/create': {
      id: '/_auth/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof AuthCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/faq': {
      id: '/_auth/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof AuthFaqImport
      parentRoute: typeof AuthImport
    }
    '/_auth/home': {
      id: '/_auth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeImport
      parentRoute: typeof AuthImport
    }
    '/_auth/user/settings': {
      id: '/_auth/user/settings'
      path: '/user/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof AuthUserSettingsImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/admin/home': {
      id: '/_dashboard/admin/home'
      path: '/admin/home'
      fullPath: '/admin/home'
      preLoaderRoute: typeof DashboardAdminHomeImport
      parentRoute: typeof DashboardImport
    }
    '/_auth/user/': {
      id: '/_auth/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AuthUserIndexImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/admin/': {
      id: '/_dashboard/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof DashboardAdminIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_auth/workspace/$id/book': {
      id: '/_auth/workspace/$id/book'
      path: '/workspace/$id/book'
      fullPath: '/workspace/$id/book'
      preLoaderRoute: typeof AuthWorkspaceIdBookImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/admin/workspace/create': {
      id: '/_dashboard/admin/workspace/create'
      path: '/admin/workspace/create'
      fullPath: '/admin/workspace/create'
      preLoaderRoute: typeof DashboardAdminWorkspaceCreateImport
      parentRoute: typeof DashboardImport
    }
    '/_auth/workspace/$id/': {
      id: '/_auth/workspace/$id/'
      path: '/workspace/$id'
      fullPath: '/workspace/$id'
      preLoaderRoute: typeof AuthWorkspaceIdIndexImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/admin/desk/': {
      id: '/_dashboard/admin/desk/'
      path: '/admin/desk'
      fullPath: '/admin/desk'
      preLoaderRoute: typeof DashboardAdminDeskIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/admin/users/': {
      id: '/_dashboard/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof DashboardAdminUsersIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/admin/workspace/': {
      id: '/_dashboard/admin/workspace/'
      path: '/admin/workspace'
      fullPath: '/admin/workspace'
      preLoaderRoute: typeof DashboardAdminWorkspaceIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/admin/workspace/$id/edit': {
      id: '/_dashboard/admin/workspace/$id/edit'
      path: '/admin/workspace/$id/edit'
      fullPath: '/admin/workspace/$id/edit'
      preLoaderRoute: typeof DashboardAdminWorkspaceIdEditImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/admin/workspace/$id/': {
      id: '/_dashboard/admin/workspace/$id/'
      path: '/admin/workspace/$id'
      fullPath: '/admin/workspace/$id'
      preLoaderRoute: typeof DashboardAdminWorkspaceIdIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthCreateRoute: typeof AuthCreateRoute
  AuthFaqRoute: typeof AuthFaqRoute
  AuthHomeRoute: typeof AuthHomeRoute
  AuthUserSettingsRoute: typeof AuthUserSettingsRoute
  AuthUserIndexRoute: typeof AuthUserIndexRoute
  AuthWorkspaceIdBookRoute: typeof AuthWorkspaceIdBookRoute
  AuthWorkspaceIdIndexRoute: typeof AuthWorkspaceIdIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthCreateRoute: AuthCreateRoute,
  AuthFaqRoute: AuthFaqRoute,
  AuthHomeRoute: AuthHomeRoute,
  AuthUserSettingsRoute: AuthUserSettingsRoute,
  AuthUserIndexRoute: AuthUserIndexRoute,
  AuthWorkspaceIdBookRoute: AuthWorkspaceIdBookRoute,
  AuthWorkspaceIdIndexRoute: AuthWorkspaceIdIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardRouteChildren {
  DashboardAdminHomeRoute: typeof DashboardAdminHomeRoute
  DashboardAdminIndexRoute: typeof DashboardAdminIndexRoute
  DashboardAdminWorkspaceCreateRoute: typeof DashboardAdminWorkspaceCreateRoute
  DashboardAdminDeskIndexRoute: typeof DashboardAdminDeskIndexRoute
  DashboardAdminUsersIndexRoute: typeof DashboardAdminUsersIndexRoute
  DashboardAdminWorkspaceIndexRoute: typeof DashboardAdminWorkspaceIndexRoute
  DashboardAdminWorkspaceIdEditRoute: typeof DashboardAdminWorkspaceIdEditRoute
  DashboardAdminWorkspaceIdIndexRoute: typeof DashboardAdminWorkspaceIdIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminHomeRoute: DashboardAdminHomeRoute,
  DashboardAdminIndexRoute: DashboardAdminIndexRoute,
  DashboardAdminWorkspaceCreateRoute: DashboardAdminWorkspaceCreateRoute,
  DashboardAdminDeskIndexRoute: DashboardAdminDeskIndexRoute,
  DashboardAdminUsersIndexRoute: DashboardAdminUsersIndexRoute,
  DashboardAdminWorkspaceIndexRoute: DashboardAdminWorkspaceIndexRoute,
  DashboardAdminWorkspaceIdEditRoute: DashboardAdminWorkspaceIdEditRoute,
  DashboardAdminWorkspaceIdIndexRoute: DashboardAdminWorkspaceIdIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/LandingPage': typeof LandingPageRoute
  '': typeof DashboardRouteWithChildren
  '/bookings': typeof BookingsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/create': typeof AuthCreateRoute
  '/faq': typeof AuthFaqRoute
  '/home': typeof AuthHomeRoute
  '/user/settings': typeof AuthUserSettingsRoute
  '/admin/home': typeof DashboardAdminHomeRoute
  '/user': typeof AuthUserIndexRoute
  '/admin': typeof DashboardAdminIndexRoute
  '/workspace/$id/book': typeof AuthWorkspaceIdBookRoute
  '/admin/workspace/create': typeof DashboardAdminWorkspaceCreateRoute
  '/workspace/$id': typeof AuthWorkspaceIdIndexRoute
  '/admin/desk': typeof DashboardAdminDeskIndexRoute
  '/admin/users': typeof DashboardAdminUsersIndexRoute
  '/admin/workspace': typeof DashboardAdminWorkspaceIndexRoute
  '/admin/workspace/$id/edit': typeof DashboardAdminWorkspaceIdEditRoute
  '/admin/workspace/$id': typeof DashboardAdminWorkspaceIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/LandingPage': typeof LandingPageRoute
  '': typeof DashboardRouteWithChildren
  '/bookings': typeof BookingsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/create': typeof AuthCreateRoute
  '/faq': typeof AuthFaqRoute
  '/home': typeof AuthHomeRoute
  '/user/settings': typeof AuthUserSettingsRoute
  '/admin/home': typeof DashboardAdminHomeRoute
  '/user': typeof AuthUserIndexRoute
  '/admin': typeof DashboardAdminIndexRoute
  '/workspace/$id/book': typeof AuthWorkspaceIdBookRoute
  '/admin/workspace/create': typeof DashboardAdminWorkspaceCreateRoute
  '/workspace/$id': typeof AuthWorkspaceIdIndexRoute
  '/admin/desk': typeof DashboardAdminDeskIndexRoute
  '/admin/users': typeof DashboardAdminUsersIndexRoute
  '/admin/workspace': typeof DashboardAdminWorkspaceIndexRoute
  '/admin/workspace/$id/edit': typeof DashboardAdminWorkspaceIdEditRoute
  '/admin/workspace/$id': typeof DashboardAdminWorkspaceIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/LandingPage': typeof LandingPageRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_dashboard': typeof DashboardRouteWithChildren
  '/bookings': typeof BookingsRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/test': typeof TestRoute
  '/_auth/create': typeof AuthCreateRoute
  '/_auth/faq': typeof AuthFaqRoute
  '/_auth/home': typeof AuthHomeRoute
  '/_auth/user/settings': typeof AuthUserSettingsRoute
  '/_dashboard/admin/home': typeof DashboardAdminHomeRoute
  '/_auth/user/': typeof AuthUserIndexRoute
  '/_dashboard/admin/': typeof DashboardAdminIndexRoute
  '/_auth/workspace/$id/book': typeof AuthWorkspaceIdBookRoute
  '/_dashboard/admin/workspace/create': typeof DashboardAdminWorkspaceCreateRoute
  '/_auth/workspace/$id/': typeof AuthWorkspaceIdIndexRoute
  '/_dashboard/admin/desk/': typeof DashboardAdminDeskIndexRoute
  '/_dashboard/admin/users/': typeof DashboardAdminUsersIndexRoute
  '/_dashboard/admin/workspace/': typeof DashboardAdminWorkspaceIndexRoute
  '/_dashboard/admin/workspace/$id/edit': typeof DashboardAdminWorkspaceIdEditRoute
  '/_dashboard/admin/workspace/$id/': typeof DashboardAdminWorkspaceIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/LandingPage'
    | ''
    | '/bookings'
    | '/login'
    | '/register'
    | '/test'
    | '/create'
    | '/faq'
    | '/home'
    | '/user/settings'
    | '/admin/home'
    | '/user'
    | '/admin'
    | '/workspace/$id/book'
    | '/admin/workspace/create'
    | '/workspace/$id'
    | '/admin/desk'
    | '/admin/users'
    | '/admin/workspace'
    | '/admin/workspace/$id/edit'
    | '/admin/workspace/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/LandingPage'
    | ''
    | '/bookings'
    | '/login'
    | '/register'
    | '/test'
    | '/create'
    | '/faq'
    | '/home'
    | '/user/settings'
    | '/admin/home'
    | '/user'
    | '/admin'
    | '/workspace/$id/book'
    | '/admin/workspace/create'
    | '/workspace/$id'
    | '/admin/desk'
    | '/admin/users'
    | '/admin/workspace'
    | '/admin/workspace/$id/edit'
    | '/admin/workspace/$id'
  id:
    | '__root__'
    | '/'
    | '/LandingPage'
    | '/_auth'
    | '/_dashboard'
    | '/bookings'
    | '/login'
    | '/register'
    | '/test'
    | '/_auth/create'
    | '/_auth/faq'
    | '/_auth/home'
    | '/_auth/user/settings'
    | '/_dashboard/admin/home'
    | '/_auth/user/'
    | '/_dashboard/admin/'
    | '/_auth/workspace/$id/book'
    | '/_dashboard/admin/workspace/create'
    | '/_auth/workspace/$id/'
    | '/_dashboard/admin/desk/'
    | '/_dashboard/admin/users/'
    | '/_dashboard/admin/workspace/'
    | '/_dashboard/admin/workspace/$id/edit'
    | '/_dashboard/admin/workspace/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LandingPageRoute: typeof LandingPageRoute
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
  BookingsRoute: typeof BookingsRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  TestRoute: typeof TestRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LandingPageRoute: LandingPageRoute,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
  BookingsRoute: BookingsRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  TestRoute: TestRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/LandingPage",
        "/_auth",
        "/_dashboard",
        "/bookings",
        "/login",
        "/register",
        "/test"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/LandingPage": {
      "filePath": "LandingPage.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/create",
        "/_auth/faq",
        "/_auth/home",
        "/_auth/user/settings",
        "/_auth/user/",
        "/_auth/workspace/$id/book",
        "/_auth/workspace/$id/"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/admin/home",
        "/_dashboard/admin/",
        "/_dashboard/admin/workspace/create",
        "/_dashboard/admin/desk/",
        "/_dashboard/admin/users/",
        "/_dashboard/admin/workspace/",
        "/_dashboard/admin/workspace/$id/edit",
        "/_dashboard/admin/workspace/$id/"
      ]
    },
    "/bookings": {
      "filePath": "bookings.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_auth/create": {
      "filePath": "_auth/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/faq": {
      "filePath": "_auth/faq.tsx",
      "parent": "/_auth"
    },
    "/_auth/home": {
      "filePath": "_auth/home.tsx",
      "parent": "/_auth"
    },
    "/_auth/user/settings": {
      "filePath": "_auth/user/settings.tsx",
      "parent": "/_auth"
    },
    "/_dashboard/admin/home": {
      "filePath": "_dashboard/admin/home.tsx",
      "parent": "/_dashboard"
    },
    "/_auth/user/": {
      "filePath": "_auth/user/index.tsx",
      "parent": "/_auth"
    },
    "/_dashboard/admin/": {
      "filePath": "_dashboard/admin/index.tsx",
      "parent": "/_dashboard"
    },
    "/_auth/workspace/$id/book": {
      "filePath": "_auth/workspace/$id/book.tsx",
      "parent": "/_auth"
    },
    "/_dashboard/admin/workspace/create": {
      "filePath": "_dashboard/admin/workspace/create.tsx",
      "parent": "/_dashboard"
    },
    "/_auth/workspace/$id/": {
      "filePath": "_auth/workspace/$id/index.tsx",
      "parent": "/_auth"
    },
    "/_dashboard/admin/desk/": {
      "filePath": "_dashboard/admin/desk/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/admin/users/": {
      "filePath": "_dashboard/admin/users/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/admin/workspace/": {
      "filePath": "_dashboard/admin/workspace/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/admin/workspace/$id/edit": {
      "filePath": "_dashboard/admin/workspace/$id/edit.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/admin/workspace/$id/": {
      "filePath": "_dashboard/admin/workspace/$id/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
